{"Structs/Test.html#/s:7WingKit4TestV2idSSv":{"name":"id","abstract":"<p>The identifier for the test.</p>","parent_name":"Test"},"Structs/Test.html#/s:7WingKit4TestV6statusAA0C6StatusOv":{"name":"status","abstract":"<p>The status of processing for the test.</p>","parent_name":"Test"},"Structs/Test.html#/s:7WingKit4TestV7takenAt10Foundation4DateVSgv":{"name":"takenAt","abstract":"<p>The date/time for when the test was taken at.</p>","parent_name":"Test"},"Structs/Test.html#/s:7WingKit4TestV14breathDurationSdSgv":{"name":"breathDuration","abstract":"<p>The length of time that the patient breathed into the device.</p>","parent_name":"Test"},"Structs/Test.html#/s:7WingKit4TestV11exhaleCurveSaySaySdGGSgv":{"name":"exhaleCurve","abstract":"<p>The values for the exhale curve graph.</p>","parent_name":"Test"},"Structs/Test.html#/s:7WingKit4TestV11totalVolumeSdSgv":{"name":"totalVolume","abstract":"<p>The total volume exhaled (in liters).</p>","parent_name":"Test"},"Structs/Test.html#/s:7WingKit4TestV3pefSdSgv":{"name":"pef","abstract":"<p>The PEF value for the test (in liters per second).</p>","parent_name":"Test"},"Structs/Test.html#/s:7WingKit4TestV4fev1SdSgv":{"name":"fev1","abstract":"<p>The FEV1 value for the test (in liters).</p>","parent_name":"Test"},"Structs/Test.html#/s:7WingKit4TestV14uploadTargetIdSSSgv":{"name":"uploadTargetId","abstract":"<p>The id of the associated upload target.</p>","parent_name":"Test"},"Structs/OAuthCredentials.html#/s:7WingKit16OAuthCredentialsV2idSSv":{"name":"id","abstract":"<p>Undocumented</p>","parent_name":"OAuthCredentials"},"Structs/OAuthCredentials.html#/s:7WingKit16OAuthCredentialsV6secretSSv":{"name":"secret","abstract":"<p>Undocumented</p>","parent_name":"OAuthCredentials"},"Structs/OAuthCredentials.html#/s:7WingKit16OAuthCredentialsVACSS2id_SS6secrettcfc":{"name":"init(id:secret:)","abstract":"<p>Undocumented</p>","parent_name":"OAuthCredentials"},"Structs/PatientData.html#/s:7WingKit11PatientDataV2idSSv":{"name":"id","abstract":"<p>The unique ID for the patient.</p>","parent_name":"PatientData"},"Structs/PatientData.html#/s:7WingKit11PatientDataV13biologicalSexAA011BiologlicalF0Ov":{"name":"biologicalSex","abstract":"<p>The patient&rsquo;s biological sex.</p>","parent_name":"PatientData"},"Structs/PatientData.html#/s:7WingKit11PatientDataV9ethnicityAA9EthnicityOv":{"name":"ethnicity","abstract":"<p>The patient&rsquo;s ethnicity.</p>","parent_name":"PatientData"},"Structs/PatientData.html#/s:7WingKit11PatientDataV6heightSiv":{"name":"height","abstract":"<p>The patient&rsquo;s height (in inches).</p>","parent_name":"PatientData"},"Structs/PatientData.html#/s:7WingKit11PatientDataV3ageSiv":{"name":"age","abstract":"<p>The patient&rsquo;s age.</p>","parent_name":"PatientData"},"Structs/PatientData.html#/s:7WingKit11PatientDataVACSS2id_AA14BiologlicalSexO010biologicalG0AA9EthnicityO9ethnicitySi6heightSi3agetcfc":{"name":"init(id:biologicalSex:ethnicity:height:age:)","abstract":"<p>Undocumented</p>","parent_name":"PatientData"},"Structs/TestSession.html#/s:7WingKit11TestSessionV2idSSv":{"name":"id","abstract":"<p>The identifier for the test session.</p>","parent_name":"TestSession"},"Structs/TestSession.html#/s:7WingKit11TestSessionV9startedAt10Foundation4DateVv":{"name":"startedAt","abstract":"<p>The date/time for when the test session started.</p>","parent_name":"TestSession"},"Structs/TestSession.html#/s:7WingKit11TestSessionV7endedAt10Foundation4DateVSgv":{"name":"endedAt","abstract":"<p>The date/time for when the test session ended.</p>","parent_name":"TestSession"},"Structs/TestSession.html#/s:7WingKit11TestSessionV16lungFunctionZoneAA04LungfG0OSgv":{"name":"lungFunctionZone","abstract":"<p>The lung function based on the result of the test.</p>","parent_name":"TestSession"},"Structs/TestSession.html#/s:7WingKit11TestSessionV16respiratoryStateAA011RespiratoryF0OSgv":{"name":"respiratoryState","abstract":"<p>The respiratory state based on the result of the test.</p>","parent_name":"TestSession"},"Structs/TestSession.html#/s:7WingKit11TestSessionV15referenceMetricAA09ReferenceF0Ov":{"name":"referenceMetric","abstract":"<p>The metric used to determine the best test candidate.</p>","parent_name":"TestSession"},"Structs/TestSession.html#/s:7WingKit11TestSessionV12pefPredictedSdSgv":{"name":"pefPredicted","abstract":"<p>The predicted PEF value for the patient with the demographics given when creating the test session.</p>","parent_name":"TestSession"},"Structs/TestSession.html#/s:7WingKit11TestSessionV13fev1PredictedSdSgv":{"name":"fev1Predicted","abstract":"<p>The predicted FEV1 value for the patient with the demographics given when creating the test session.</p>","parent_name":"TestSession"},"Structs/TestSession.html#/s:7WingKit11TestSessionV8latitudeSdSgv":{"name":"latitude","abstract":"<p>The latitude of the device at time of session start.</p>","parent_name":"TestSession"},"Structs/TestSession.html#/s:7WingKit11TestSessionV9longitudeSdSgv":{"name":"longitude","abstract":"<p>The longitude of the device at time of session start.</p>","parent_name":"TestSession"},"Structs/TestSession.html#/s:7WingKit11TestSessionV8altitudeSdSgv":{"name":"altitude","abstract":"<p>The altitude of the device at time of session start.</p>","parent_name":"TestSession"},"Structs/TestSession.html#/s:7WingKit11TestSessionV5floorSdSgv":{"name":"floor","abstract":"<p>The estimated floor of the device at time of session start.</p>","parent_name":"TestSession"},"Structs/TestSession.html#/s:7WingKit11TestSessionV04bestC0AA0C0VSgv":{"name":"bestTest","abstract":"<p>The test chosen as the best test candidate to derive results from.</p>","parent_name":"TestSession"},"Structs/TestSession.html#/s:7WingKit11TestSessionV5testsSayAA0C0VGv":{"name":"tests","abstract":"<p>The tests taken during the test session.</p>","parent_name":"TestSession"},"Structs/TestSession.html#/s:7WingKit11TestSessionV04bestC6ChoiceAA04BestcF0OSgv":{"name":"bestTestChoice","abstract":"<p>How the best test was chosen</p>","parent_name":"TestSession"},"Structs/TestSession.html":{"name":"TestSession","abstract":"<p>The <code>TestSession</code> struct represents a session of multiple lung function tests.</p>"},"Structs/PatientData.html":{"name":"PatientData","abstract":"<p>Undocumented</p>"},"Structs/OAuthCredentials.html":{"name":"OAuthCredentials","abstract":"<p>Undocumented</p>"},"Structs/Test.html":{"name":"Test","abstract":"<p>The <code>Test</code> struct represents a lung function test.</p>"},"Protocols/TestRecorderDelegate.html#/s:7WingKit20TestRecorderDelegateP20recorderStateChangedyAA0cdG0OF":{"name":"recorderStateChanged(_:)","abstract":"<p>Undocumented</p>","parent_name":"TestRecorderDelegate"},"Protocols/TestRecorderDelegate.html#/s:7WingKit20TestRecorderDelegateP21signalStrengthChangedySdF":{"name":"signalStrengthChanged(_:)","abstract":"<p>Undocumented</p>","parent_name":"TestRecorderDelegate"},"Protocols/ReachabilityMonitorDelegate.html#/s:7WingKit27ReachabilityMonitorDelegateP012reachabilityd9DidChangeC0yAA0cD0CF":{"name":"reachabilityMonitorDidChangeReachability(_:)","abstract":"<p>Tells the delegate when the network reachability state has changed.</p>","parent_name":"ReachabilityMonitorDelegate"},"Protocols/AmbientNoiseMonitorDelegate.html#/s:7WingKit27AmbientNoiseMonitorDelegateP07ambientdE14DidChangeStateyAA0cdE0CF":{"name":"ambientNoiseMonitorDidChangeState(_:)","abstract":"<p>Tells the delegate that the monitor state changed.</p>","parent_name":"AmbientNoiseMonitorDelegate"},"Protocols/SensorMonitorDelegate.html#/s:7WingKit21SensorMonitorDelegateP20sensorStateDidChangeyAA0cD0CF":{"name":"sensorStateDidChange(_:)","abstract":"<p>Tells the delegate when the state of the sensor has changed.</p>","parent_name":"SensorMonitorDelegate"},"Protocols/SensorMonitorDelegate.html":{"name":"SensorMonitorDelegate","abstract":"<p>The delegate of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SensorMonitor.html\">SensorMonitor</a></code> object must adopt the <code>SensorMonitorDelegate</code> protocol. Methods of the protocol"},"Protocols/AmbientNoiseMonitorDelegate.html":{"name":"AmbientNoiseMonitorDelegate","abstract":"<p>The delegate of the AmbientNoiseMonitor object must adopt the <code>AmbientNoiseMonitorDelegate</code> protocol.  This allows"},"Protocols/ReachabilityMonitorDelegate.html":{"name":"ReachabilityMonitorDelegate","abstract":"<p>The delegate of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ReachabilityMonitor.html\">ReachabilityMonitor</a></code> object must adopt the <code>ReachabilityMonitorDelegate</code> protocol. Methods of the"},"Protocols/TestRecorderDelegate.html":{"name":"TestRecorderDelegate","abstract":"<p>The delegate of a TestSessionRecorder object must adopt the <code>TestRecorderDelegate</code> protocol. Methods of the protocol"},"Enums/TestStatus.html#/s:7WingKit10TestStatusO7startedA2CmF":{"name":"started","abstract":"<p>Indicates the has been initialized and started.</p>","parent_name":"TestStatus"},"Enums/TestStatus.html#/s:7WingKit10TestStatusO8completeA2CmF":{"name":"complete","abstract":"<p>Indicates the test has finished uploading and processing and without any errors.</p>","parent_name":"TestStatus"},"Enums/TestStatus.html#/s:7WingKit10TestStatusO8uploadedA2CmF":{"name":"uploaded","abstract":"<p>Indicates the test has finished uploading the recording.</p>","parent_name":"TestStatus"},"Enums/TestStatus.html#/s:7WingKit10TestStatusO10processingA2CmF":{"name":"processing","abstract":"<p>Indicates the test is currently processing.</p>","parent_name":"TestStatus"},"Enums/TestStatus.html#/s:7WingKit10TestStatusO5errorA2CmF":{"name":"error","abstract":"<p>Indicates that an error occurred while processing the test.</p>","parent_name":"TestStatus"},"Enums/ClientError.html#/s:7WingKit11ClientErrorO10invalidURLA2CmF":{"name":"invalidURL","abstract":"<p>Undocumented</p>","parent_name":"ClientError"},"Enums/ClientError.html#/s:7WingKit11ClientErrorO12unauthorizedA2CmF":{"name":"unauthorized","abstract":"<p>Undocumented</p>","parent_name":"ClientError"},"Enums/ClientError.html#/s:7WingKit11ClientErrorO18invalidPatientDataA2CmF":{"name":"invalidPatientData","abstract":"<p>Undocumented</p>","parent_name":"ClientError"},"Enums/Ethnicity.html#/s:7WingKit9EthnicityO5otherA2CmF":{"name":"other","abstract":"<p>Undocumented</p>","parent_name":"Ethnicity"},"Enums/Ethnicity.html#/s:7WingKit9EthnicityO14nativeAmericanA2CmF":{"name":"nativeAmerican","abstract":"<p>Undocumented</p>","parent_name":"Ethnicity"},"Enums/Ethnicity.html#/s:7WingKit9EthnicityO5asianA2CmF":{"name":"asian","abstract":"<p>Undocumented</p>","parent_name":"Ethnicity"},"Enums/Ethnicity.html#/s:7WingKit9EthnicityO5blackA2CmF":{"name":"black","abstract":"<p>Undocumented</p>","parent_name":"Ethnicity"},"Enums/Ethnicity.html#/s:7WingKit9EthnicityO15pacificIslanderA2CmF":{"name":"pacificIslander","abstract":"<p>Undocumented</p>","parent_name":"Ethnicity"},"Enums/Ethnicity.html#/s:7WingKit9EthnicityO16whiteNonHispanicA2CmF":{"name":"whiteNonHispanic","abstract":"<p>Undocumented</p>","parent_name":"Ethnicity"},"Enums/Ethnicity.html#/s:7WingKit9EthnicityO13whiteHispanicA2CmF":{"name":"whiteHispanic","abstract":"<p>Undocumented</p>","parent_name":"Ethnicity"},"Enums/Ethnicity.html#/s:7WingKit9EthnicityO9twoOrMoreA2CmF":{"name":"twoOrMore","abstract":"<p>Undocumented</p>","parent_name":"Ethnicity"},"Enums/BiologlicalSex.html#/s:7WingKit14BiologlicalSexO4maleA2CmF":{"name":"male","abstract":"<p>Undocumented</p>","parent_name":"BiologlicalSex"},"Enums/BiologlicalSex.html#/s:7WingKit14BiologlicalSexO6femaleA2CmF":{"name":"female","abstract":"<p>Undocumented</p>","parent_name":"BiologlicalSex"},"Enums/TestRecorderError.html#/s:7WingKit17TestRecorderErrorO19configurationFailedA2CmF":{"name":"configurationFailed","abstract":"<p>Indicates the recorder failed to configure the underlying audio session used for recording.</p>","parent_name":"TestRecorderError"},"Enums/TestRecorderError.html#/s:7WingKit17TestRecorderErrorO20localizedDescriptionSSv":{"name":"localizedDescription","abstract":"<p>Undocumented</p>","parent_name":"TestRecorderError"},"Enums/TestRecorderState.html#/s:7WingKit17TestRecorderStateO5readyA2CmF":{"name":"ready","abstract":"<p>Indicates the recrders have been configured and are ready to start recording.</p>","parent_name":"TestRecorderState"},"Enums/TestRecorderState.html#/s:7WingKit17TestRecorderStateO9recordingA2CmF":{"name":"recording","abstract":"<p>Indicates that the recording is currently in progress.</p>","parent_name":"TestRecorderState"},"Enums/TestRecorderState.html#/s:7WingKit17TestRecorderStateO8finishedA2CmF":{"name":"finished","abstract":"<p>Indicates that the recording has concluded.</p>","parent_name":"TestRecorderState"},"Enums/ReferenceMetric.html#/s:7WingKit15ReferenceMetricO3pefA2CmF":{"name":"pef","abstract":"<p>Undocumented</p>","parent_name":"ReferenceMetric"},"Enums/ReferenceMetric.html#/s:7WingKit15ReferenceMetricO4fev1A2CmF":{"name":"fev1","abstract":"<p>Undocumented</p>","parent_name":"ReferenceMetric"},"Enums/ReferenceMetric.html#/s:7WingKit15ReferenceMetricO4unitSSv":{"name":"unit","abstract":"<p>Undocumented</p>","parent_name":"ReferenceMetric"},"Enums/ReferenceMetric.html#/s:7WingKit15ReferenceMetricO15formattedStringSSSd8forValue_Sb11includeUnittF":{"name":"formattedString(forValue:includeUnit:)","abstract":"<p>Undocumented</p>","parent_name":"ReferenceMetric"},"Enums/RespiratoryState.html#/s:7WingKit16RespiratoryStateO9greenZoneA2CmF":{"name":"greenZone","abstract":"<p>Undocumented</p>","parent_name":"RespiratoryState"},"Enums/RespiratoryState.html#/s:7WingKit16RespiratoryStateO10yellowZoneA2CmF":{"name":"yellowZone","abstract":"<p>Undocumented</p>","parent_name":"RespiratoryState"},"Enums/RespiratoryState.html#/s:7WingKit16RespiratoryStateO7redZoneA2CmF":{"name":"redZone","abstract":"<p>Undocumented</p>","parent_name":"RespiratoryState"},"Enums/RespiratoryState.html#/s:7WingKit16RespiratoryStateO12criticalZoneA2CmF":{"name":"criticalZone","abstract":"<p>Undocumented</p>","parent_name":"RespiratoryState"},"Enums/LungFunctionZone.html#/s:7WingKit16LungFunctionZoneO05greenE0A2CmF":{"name":"greenZone","abstract":"<p>Indicates that 80 to 100 percent of the usual or normal peak flow readings are clear.</p>","parent_name":"LungFunctionZone"},"Enums/LungFunctionZone.html#/s:7WingKit16LungFunctionZoneO06yellowE0A2CmF":{"name":"yellowZone","abstract":"<p>Indicates that 50 to 79 percent of the usual or normal peak flow readings.</p>","parent_name":"LungFunctionZone"},"Enums/LungFunctionZone.html#/s:7WingKit16LungFunctionZoneO03redE0A2CmF":{"name":"redZone","abstract":"<p>Indicates that less than 50 percent of the usual or normal peak flow readings.</p>","parent_name":"LungFunctionZone"},"Enums/BestTestChoice.html#/s:7WingKit14BestTestChoiceO12reproducibleA2CmF":{"name":"reproducible","abstract":"<p>Indicates that the test session had reproducible results to derive the best test from.</p>","parent_name":"BestTestChoice"},"Enums/BestTestChoice.html#/s:7WingKit14BestTestChoiceO16highestReferenceA2CmF":{"name":"highestReference","abstract":"<p>Indicates that the test session did not have reproducible results, thus the test with highest reference value was used as the result.</p>","parent_name":"BestTestChoice"},"Enums/NetworkError.html#/s:7WingKit12NetworkErrorO15invalidResponseA2CmF":{"name":"invalidResponse","abstract":"<p>Undocumented</p>","parent_name":"NetworkError"},"Enums/NetworkError.html#/s:7WingKit12NetworkErrorO22unacceptableStatusCodeACSi4code_tcACmF":{"name":"unacceptableStatusCode","abstract":"<p>Undocumented</p>","parent_name":"NetworkError"},"Enums/TestSessionManagerError.html#/s:7WingKit23TestSessionManagerErrorO04testD8NotFoundA2CmF":{"name":"testSessionNotFound","abstract":"<p>Indicates the request test session could not be found.</p>","parent_name":"TestSessionManagerError"},"Enums/TestSessionManagerError.html#/s:7WingKit23TestSessionManagerErrorO17processingTimeoutA2CmF":{"name":"processingTimeout","abstract":"<p>Indicates the processing request has timed out.</p>","parent_name":"TestSessionManagerError"},"Enums/TestSessionManagerError.html#/s:7WingKit23TestSessionManagerErrorO26uploadTargetCreationFailedA2CmF":{"name":"uploadTargetCreationFailed","abstract":"<p>Indicates that an upload target could not be created to upload a test recording to.</p>","parent_name":"TestSessionManagerError"},"Enums/TestSessionManagerError.html#/s:7WingKit23TestSessionManagerErrorO16invalidRecordingA2CmF":{"name":"invalidRecording","abstract":"<p>Undocumented</p>","parent_name":"TestSessionManagerError"},"Enums/TestSessionState.html#/s:7WingKit16TestSessionStateO02noC0A2CmF":{"name":"noTest","abstract":"<p>Indicates that no tests have been performed during the session.</p>","parent_name":"TestSessionState"},"Enums/TestSessionState.html#/s:7WingKit16TestSessionStateO04goodC5FirstA2CmF":{"name":"goodTestFirst","abstract":"<p>Indicates that the test session includes one successful test.</p>","parent_name":"TestSessionState"},"Enums/TestSessionState.html#/s:7WingKit16TestSessionStateO012notProcessedC5FirstA2CmF":{"name":"notProcessedTestFirst","abstract":"<p>Indicates that the test session includes one test that wasn&rsquo;t able to be processed.</p>","parent_name":"TestSessionState"},"Enums/TestSessionState.html#/s:7WingKit16TestSessionStateO015notReproducibleC5FirstA2CmF":{"name":"notReproducibleTestFirst","abstract":"<p>Indicates that the test session includes two complete tests that aren&rsquo;t reproducible.</p>","parent_name":"TestSessionState"},"Enums/TestSessionState.html#/s:7WingKit16TestSessionStateO015notReproducibleC5FinalA2CmF":{"name":"notReproducibleTestFinal","abstract":"<p>Indicates that the test session has concluded with non-reproducible results.</p>","parent_name":"TestSessionState"},"Enums/TestSessionState.html#/s:7WingKit16TestSessionStateO012reproducibleC5FinalA2CmF":{"name":"reproducibleTestFinal","abstract":"<p>Indicates that the test session has concluded with reproducible results.</p>","parent_name":"TestSessionState"},"Enums/TestSessionState.html#/s:7WingKit16TestSessionStateO012notProcessedC5FinalA2CmF":{"name":"notProcessedTestFinal","abstract":"<p>Indiciates that the test session has concluded with at least two non-processable tests.</p>","parent_name":"TestSessionState"},"Enums/LocalTestFailureReason.html#/s:7WingKit22LocalTestFailureReasonO18sensorDisconnectedA2CmF":{"name":"sensorDisconnected","abstract":"<p>Undocumented</p>","parent_name":"LocalTestFailureReason"},"Enums/LocalTestFailureReason.html#/s:7WingKit22LocalTestFailureReasonO20internetDisconnectedA2CmF":{"name":"internetDisconnected","abstract":"<p>Undocumented</p>","parent_name":"LocalTestFailureReason"},"Enums/LocalTestFailureReason.html#/s:7WingKit22LocalTestFailureReasonO24animationThresholdNotMetA2CmF":{"name":"animationThresholdNotMet","abstract":"<p>Undocumented</p>","parent_name":"LocalTestFailureReason"},"Enums/AmbientNoiseMonitorError.html#/s:7WingKit24AmbientNoiseMonitorErrorO26microphonePermissionDeniedA2CmF":{"name":"microphonePermissionDenied","abstract":"<p>Occurs when the user has denied the application access to the microphone.</p>","parent_name":"AmbientNoiseMonitorError"},"Enums/AmbientNoiseMonitorError.html#/s:7WingKit24AmbientNoiseMonitorErrorO021recorderConfigurationF0A2CmF":{"name":"recorderConfigurationError","abstract":"<p>Indicates that an error occurred while configuring the recorder.</p>","parent_name":"AmbientNoiseMonitorError"},"Enums/AmbientNoiseMonitorError.html":{"name":"AmbientNoiseMonitorError","abstract":"<p>The <code>AmbientNoiseMonitorError</code> enum describes domain specific errors for the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AmbientNoiseMonitor.html\">AmbientNoiseMonitor</a></code> class.</p>"},"Enums/LocalTestFailureReason.html":{"name":"LocalTestFailureReason","abstract":"<p>Undocumented</p>"},"Enums/TestSessionState.html":{"name":"TestSessionState","abstract":"<p>The <code>TestSessionState</code> enum describes the various states a test session can be in.</p>"},"Enums/TestSessionManagerError.html":{"name":"TestSessionManagerError","abstract":"<p>The <code>TestSessionManagerError</code> enum describes domain specific errors for the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/TestSessionManager.html\">TestSessionManager</a></code> class.</p>"},"Enums/NetworkError.html":{"name":"NetworkError","abstract":"<p>Undocumented</p>"},"Enums/BestTestChoice.html":{"name":"BestTestChoice","abstract":"<p>Represents the method used to determine the result (best test) of a test session.</p>"},"Enums/LungFunctionZone.html":{"name":"LungFunctionZone","abstract":"<p>Represents the Peak Flow measurement zones that doctors use when developing an asthma management plan.</p>"},"Enums/RespiratoryState.html":{"name":"RespiratoryState","abstract":"<p>Undocumented</p>"},"Enums/ReferenceMetric.html":{"name":"ReferenceMetric","abstract":"<p>Undocumented</p>"},"Enums/TestRecorderState.html":{"name":"TestRecorderState","abstract":"<p>The various states of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/TestSessionRecorder.html\">TestSessionRecorder</a></code> class during a recording session.</p>"},"Enums/TestRecorderError.html":{"name":"TestRecorderError","abstract":"<p>The <code>TestRecorderError</code> enum describes domain specific errors for the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/TestSessionRecorder.html\">TestSessionRecorder</a></code> class.</p>"},"Enums/BiologlicalSex.html":{"name":"BiologlicalSex","abstract":"<p>Undocumented</p>"},"Enums/Ethnicity.html":{"name":"Ethnicity","abstract":"<p>Undocumented</p>"},"Enums/ClientError.html":{"name":"ClientError","abstract":"<p>Undocumented</p>"},"Enums/TestStatus.html":{"name":"TestStatus","abstract":"<p>The <code>TestStatus</code> enum describes the various states an individual lung function test can be in.</p>"},"Classes/Client.html#/s:7WingKit6ClientC5oauthAA16OAuthCredentialsVSgv":{"name":"oauth","abstract":"<p>The OAuth credentials required to authenticate with the Wing API.</p>","parent_name":"Client"},"Classes/Client.html#/s:7WingKit6ClientC5tokenSSSgv":{"name":"token","abstract":"<p>The authorization token used to make authorized requests.</p>","parent_name":"Client"},"Classes/Client.html#/s:7WingKit6ClientCACycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"Client"},"Classes/Client.html#/s:7WingKit6ClientC12authenticateyySSSg_s5Error_pSgtc10completion_tF":{"name":"authenticate(completion:)","abstract":"<p>Authenticates the client with the Wing API using the configured OAuth Client ID and Client Secret.</p>","parent_name":"Client"},"Classes/Client.html#/s:7WingKit6ClientC17createTestSessionyAA11PatientDataV4with_yAA0eF0VSg_s5Error_pSgtc10completiontF":{"name":"createTestSession(with:completion:)","abstract":"<p>Sends a request to the Wing REST API to create a test session.</p>","parent_name":"Client"},"Classes/Client.html#/s:7WingKit6ClientC19retrieveTestSessionySS6withId_yAA0eF0VSg_s5Error_pSgtc10completiontF":{"name":"retrieveTestSession(withId:completion:)","abstract":"<p>Sends a request to retrieve the details for the test session for the specified ID.</p>","parent_name":"Client"},"Classes/TestSessionRecorder.html#/s:7WingKit19TestSessionRecorderC12testDurationSdv":{"name":"testDuration","abstract":"<p>The duration of the recording session.</p>","parent_name":"TestSessionRecorder"},"Classes/TestSessionRecorder.html#/s:7WingKit19TestSessionRecorderC23signalStrengthThresholdSdv":{"name":"signalStrengthThreshold","abstract":"<p>The threshold that the sensor recording strength must surpass to be considered a valid test.</p>","parent_name":"TestSessionRecorder"},"Classes/TestSessionRecorder.html#/s:7WingKit19TestSessionRecorderC8delegateAA0cE8Delegate_pSgXwv":{"name":"delegate","abstract":"<p>The object that acts as the delegate for the recorder.</p>","parent_name":"TestSessionRecorder"},"Classes/TestSessionRecorder.html#/s:7WingKit19TestSessionRecorderC5stateAA0cE5StateOv":{"name":"state","abstract":"<p>The current state of the recorder.</p>","parent_name":"TestSessionRecorder"},"Classes/TestSessionRecorder.html#/s:7WingKit19TestSessionRecorderC29signalStrengthThresholdPassedSbv":{"name":"signalStrengthThresholdPassed","abstract":"<p>Indicates whether or not the recorded blow has passed the required signal strength threshold to be considered a valid, processable blow.</p>","parent_name":"TestSessionRecorder"},"Classes/TestSessionRecorder.html#/s:7WingKit19TestSessionRecorderC17recordingFilepathSSSgv":{"name":"recordingFilepath","abstract":"<p>Undocumented</p>","parent_name":"TestSessionRecorder"},"Classes/TestSessionRecorder.html#/s:7WingKit19TestSessionRecorderCACycfc":{"name":"init()","abstract":"<p>Initializes an instance of the <code>TestSessionRecorder</code> class.</p>","parent_name":"TestSessionRecorder"},"Classes/TestSessionRecorder.html#/s:7WingKit19TestSessionRecorderC9configureyyKF":{"name":"configure()","abstract":"<p>Configures the blow detection and audio recorders. Starts the blow detection recorder.</p>","parent_name":"TestSessionRecorder"},"Classes/TestSessionRecorder.html#/s:7WingKit19TestSessionRecorderC14startRecordingyyF":{"name":"startRecording()","abstract":"<p>Starts the recording for a lung function test.</p>","parent_name":"TestSessionRecorder"},"Classes/TestSessionRecorder.html#/s:7WingKit19TestSessionRecorderC13stopRecordingyyF":{"name":"stopRecording()","abstract":"<p>Ends the recording session.</p>","parent_name":"TestSessionRecorder"},"Classes/TestSessionManager.html#/s:7WingKit18TestSessionManagerC6clientSQyAA6ClientCGv":{"name":"client","abstract":"<p>Undocumented</p>","parent_name":"TestSessionManager"},"Classes/TestSessionManager.html#/s:7WingKit18TestSessionManagerC5stateAA0cD5StateOv":{"name":"state","abstract":"<p>The state of the test session.</p>","parent_name":"TestSessionManager"},"Classes/TestSessionManager.html#/s:7WingKit18TestSessionManagerC04testD0AA0cD0Vv":{"name":"testSession","abstract":"<p>Undocumented</p>","parent_name":"TestSessionManager"},"Classes/TestSessionManager.html#/s:7WingKit18TestSessionManagerC20failedTestsThresholdSiv":{"name":"failedTestsThreshold","abstract":"<p>The number of tests that are allowed to fail processing before the test session is considered invalid.</p>","parent_name":"TestSessionManager"},"Classes/TestSessionManager.html#/s:7WingKit18TestSessionManagerC05localC16FailureThresholdSiv":{"name":"localTestFailureThreshold","abstract":"<p>The number of tests that are allowed to fail due to local failure reasons before the test session is considered invalid.s</p>","parent_name":"TestSessionManager"},"Classes/TestSessionManager.html#/s:7WingKit18TestSessionManagerC25processingPollingIntervalSdv":{"name":"processingPollingInterval","abstract":"<p>The interval at which the server will be pinged to check if processing is complete.</p>","parent_name":"TestSessionManager"},"Classes/TestSessionManager.html#/s:7WingKit18TestSessionManagerC26processingTimeoutThresholdSiv":{"name":"processingTimeoutThreshold","abstract":"<p>The threshold that represents the number of times the app should attempt to refresh the test session.</p>","parent_name":"TestSessionManager"},"Classes/TestSessionManager.html#/s:7WingKit18TestSessionManagerC26numberOfProcessingAttemptsSiv":{"name":"numberOfProcessingAttempts","abstract":"<p>The number of attempts the test session has been refreshed in effort to determine the processing state.</p>","parent_name":"TestSessionManager"},"Classes/TestSessionManager.html#/s:7WingKit18TestSessionManagerCAcA6ClientC6client_AA0cD0V04testD0tcfc":{"name":"init(client:testSession:)","abstract":"<p>Initializes the <code>TestSessionManager</code> with the test session passed in as an argument.</p>","parent_name":"TestSessionManager"},"Classes/TestSessionManager.html#/s:7WingKit18TestSessionManagerC07processcD0yys5Error_pSgc10completion_tF":{"name":"processTestSession(completion:)","abstract":"<p>Retrieves and applies the updated details of the associated test session.</p>","parent_name":"TestSessionManager"},"Classes/TestSessionManager.html#/s:7WingKit18TestSessionManagerC15uploadRecordingySS10atFilepath_ys5Error_pSgc10completiontF":{"name":"uploadRecording(atFilepath:completion:)","abstract":"<p>Undocumented</p>","parent_name":"TestSessionManager"},"Classes/ReachabilityMonitor.html#/s:7WingKit19ReachabilityMonitorC8delegateAA0cD8Delegate_pSgXwv":{"name":"delegate","abstract":"<p>The object that acts as the delegate for the monitor.</p>","parent_name":"ReachabilityMonitor"},"Classes/ReachabilityMonitor.html#/s:7WingKit19ReachabilityMonitorC8isActiveSbv":{"name":"isActive","abstract":"<p>Indicates whether the monitor is active or not.</p>","parent_name":"ReachabilityMonitor"},"Classes/ReachabilityMonitor.html#/s:7WingKit19ReachabilityMonitorC21isConnectedToInternetSbv":{"name":"isConnectedToInternet","abstract":"<p>Indicates whether or not the device is connected to the internet.</p>","parent_name":"ReachabilityMonitor"},"Classes/ReachabilityMonitor.html#/s:7WingKit19ReachabilityMonitorCACycfc":{"name":"init()","abstract":"<p>Initializes an instance of the <code>ReachabilityMonitor</code> class.</p>","parent_name":"ReachabilityMonitor"},"Classes/ReachabilityMonitor.html#/s:7WingKit19ReachabilityMonitorC5startyyKF":{"name":"start()","abstract":"<p>Starts monitoring the device&rsquo;s internet reachability.</p>","parent_name":"ReachabilityMonitor"},"Classes/ReachabilityMonitor.html#/s:7WingKit19ReachabilityMonitorC4stopyyF":{"name":"stop()","abstract":"<p>Stops monitoring the device&rsquo;s internet reachability.</p>","parent_name":"ReachabilityMonitor"},"Classes/AmbientNoiseMonitor.html#/s:7WingKit19AmbientNoiseMonitorC8delegateAA0cdE8Delegate_pSgXwv":{"name":"delegate","abstract":"<p>The object that acts as the delegate of the monitor.</p>","parent_name":"AmbientNoiseMonitor"},"Classes/AmbientNoiseMonitor.html#/s:7WingKit19AmbientNoiseMonitorC16isBelowThresholdSbv":{"name":"isBelowThreshold","abstract":"<p>Indicates whether the ambient noise level is below or above the allowed threshold.</p>","parent_name":"AmbientNoiseMonitor"},"Classes/AmbientNoiseMonitor.html#/s:7WingKit19AmbientNoiseMonitorC8isActiveSbv":{"name":"isActive","abstract":"<p>Indicates whether the monitor is active or not.</p>","parent_name":"AmbientNoiseMonitor"},"Classes/AmbientNoiseMonitor.html#/s:7WingKit19AmbientNoiseMonitorCACycfc":{"name":"init()","abstract":"<p>Initializes an instance of the <code>AmbientNoiseMonitor</code> class.</p>","parent_name":"AmbientNoiseMonitor"},"Classes/AmbientNoiseMonitor.html#/s:7WingKit19AmbientNoiseMonitorC5startyys5Error_pSgc10completion_tF":{"name":"start(completion:)","abstract":"<p>Starts measuring the ambient noise level.</p>","parent_name":"AmbientNoiseMonitor"},"Classes/AmbientNoiseMonitor.html#/s:7WingKit19AmbientNoiseMonitorC4stopyyF":{"name":"stop()","abstract":"<p>Stops measuring the ambient noise level.</p>","parent_name":"AmbientNoiseMonitor"},"Classes/SensorMonitor.html#/s:7WingKit13SensorMonitorC8delegateAA0cD8Delegate_pSgXwv":{"name":"delegate","abstract":"<p>The object that acts as the delegate of the monitor.</p>","parent_name":"SensorMonitor"},"Classes/SensorMonitor.html#/s:7WingKit13SensorMonitorC11isPluggedInSbv":{"name":"isPluggedIn","abstract":"<p>Indicates whether the sensor is plugged in or not.</p>","parent_name":"SensorMonitor"},"Classes/SensorMonitor.html#/c:@M@WingKit@objc(cs)SensorMonitor(im)init":{"name":"init()","abstract":"<p>Initializes an instance of the <code>SensorMonitor</code> class.</p>","parent_name":"SensorMonitor"},"Classes/SensorMonitor.html#/s:7WingKit13SensorMonitorC5startyyF":{"name":"start()","abstract":"<p>Starts monitoring the connection state of the Wing sensor.</p>","parent_name":"SensorMonitor"},"Classes/SensorMonitor.html#/s:7WingKit13SensorMonitorC4stopyyF":{"name":"stop()","abstract":"<p>Stops monitoring the connection state of the Wing sensor.</p>","parent_name":"SensorMonitor"},"Classes/SensorMonitor.html":{"name":"SensorMonitor","abstract":"<p>The <code>SensorMonitor</code> class is used to monitor the connection state of the sensor. Notifies to it&rsquo;s delegate whenever the sensor is connected/disconnected.</p>"},"Classes/AmbientNoiseMonitor.html":{"name":"AmbientNoiseMonitor","abstract":"<p>The <code>AmbientNoiseMonitor</code> class is used to monitor the ambient noise level in an environment to determine whether"},"Classes/ReachabilityMonitor.html":{"name":"ReachabilityMonitor","abstract":"<p>The <code>ReachabilityMonitor</code> class is used to monitor the network reachability. Any changes to the reachability causes a"},"Classes/TestSessionManager.html":{"name":"TestSessionManager","abstract":"<p>The <code>TestSessionManager</code> class is responsible for keeping track of a test session&rsquo;s state and provides an inteface to"},"Classes/TestSessionRecorder.html":{"name":"TestSessionRecorder","abstract":"<p>The <code>TestSessionRecorder</code> class is used to detect and record when a user blows into the Wing sensor.</p>"},"Classes/Client.html":{"name":"Client","abstract":"<p>The <code>Client</code> class acts as the interface for the Wing REST API. All Wing API Requests are routed through this class"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}